#ASTAR ALGORITHM FOR AUTONOMOUS DRIVING

import tkinter as tk
import networkx as nx
import matplotlib.pyplot as plt

intersections = [
    (1,1), (1,4), (1,7), (1,10),
    (4,1), (4,4), (4,7), (4,10),
    (7,1), (7,4), (7,7), (7,10),
    (10,1), (10,4), (10,7), (10,10)
]

G = nx.DiGraph()
G.add_edges_from([
    (1,1), (1,5), (2,2), (2,1), (3,3), (3,2), (3,7), (4,4), (4,3), (5,5), (5,6), (5,9), (6,6), (6,7), (6,2), (7,7),
    (7,8), (7,11), (8,8), (8,4), (9,9), (9,13), (10,10), (10,6), (10,9), (11,11), (11,10), (11,15),
    (12,12), (12,8), (12,11), (13,13), (13,14), (14,14), (14,10), (14,15), (15,15), (15,16), (16,16), (16,12)
])
        
def astar(start, end):

        
        H = nx.shortest_path(G, source=(start), target=(end))

        path = []
        for x in H:
            path.append(intersections[x-1])

        return path


def clear_path():
    canvas.delete("path")
    canvas.delete("end")
    
def draw_path(): 
    clear_path()
    end = int(input_entry.get())
    path = astar(start, end) 
    end = intersections[end-1]
    new_path = [(y*50+10, x*50+10) for (x, y) in path]
    # Draw the path
    for i in range(len(new_path)-1): 
        x1, y1 = new_path[i]
        x2, y2 = new_path[i+1]
        canvas.create_line(x1, y1, x2, y2, fill="blue", width=2,tags="path")
    # Draw the start and end points 
    canvas.create_oval(start2[0]-5, start2[1]-5, start2[0]+5, start2[1]+5, fill="red")
    end = (end[1] * 50+10, end[0] * 50+10)
    canvas.create_oval(end[0]-5, end[1]-5, end[0]+5, end[1]+5, fill="green", tags="end")

#start position 
start = 1
thingy = intersections[start-1]
start2 = (thingy[1] * 50+10 , thingy[0] * 50+10 )

# Create the GUI window
root = tk.Tk()
root.title("GUI Control") 
root.geometry("1100x900")

# Create the canvas to draw on 
canvas = tk.Canvas(root, width=1000, height=1000)
canvas.pack()

# Draw the grid 
canvas.create_rectangle(0, 0, 570, 570, fill="light grey")

canvas.create_rectangle(0, 50, 570, 70, fill="grey")
canvas.create_rectangle(0, 200, 570, 220, fill="grey")
canvas.create_rectangle(0, 350, 570, 370, fill="grey")
canvas.create_rectangle(0, 500, 570, 520, fill="grey")

canvas.create_rectangle(50, 0, 70, 570, fill="grey")
canvas.create_rectangle(200, 0, 220, 570, fill="grey")
canvas.create_rectangle(350, 0, 370, 570, fill="grey")
canvas.create_rectangle(500, 0, 520, 570, fill="grey")

destination_label = tk.Label(root, text="Destination:", font=("Arial", 15))
destination_label.place(x=500, y=600)

input_entry = tk.Entry(root, width=30)
input_entry.place(x=620, y=600)

destination_button = tk.Button(root, text="Submit", command=draw_path) 
destination_button.place(x=620, y=650)

clear_button = tk.Button(root, text="Clear", command=clear_path)
clear_button.place(x=700, y=650)

# Draw the start point
canvas.create_oval(start2[0]-5, start2[1]-5, start2[0]+5, start2[1]+5, fill="red")

root.mainloop() 
